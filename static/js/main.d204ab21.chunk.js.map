{"version":3,"sources":["firebase.js","components/List/List.js","components/AddList/AddList.js","components/Sidebar/Sidebar.js","components/Checkbox/Checkbox.js","components/AddTask/AddTask.js","components/Tasks/Tasks.js","containers/Page/Page.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","unsubscribeFirebase","docType","firestore","collection","List","id","select","useState","modalConfirm","setModalConfirm","deleteList","listId","a","where","get","then","snapShot","forEach","doc","ref","delete","console","log","handleClick","e","stopPropagation","className","onClick","AddList","changed","input","showAdd","setShowAdd","value","onChange","target","type","placeholder","listName","add","Sidebar","lists","active","show","setShow","map","list","key","docId","toString","Checkbox","filter","checked","setChecked","update","done","AddTask","task","Tasks","tasks","doneTasks","setFilter","checkedTasks","setcheckedTasks","filterHandler","setClassesName","selectTasks","includes","filteredArray","idx","tasksHandler","func","deleteTasks","Promise","all","length","Page","state","selectedList","selectedListName","listInput","taskInput","getLists","onSnapshot","newLists","docs","data","setState","getTasks","newTasks","selectList","getAttribute","textContent","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d204ab21.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDj_CTwpr7_bhQoHnvOtP0Ag8P8ip7L8-Q\",\r\n    authDomain: \"todo-app-217a2.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-217a2.firebaseio.com\",\r\n    projectId: \"todo-app-217a2\",\r\n    storageBucket: \"todo-app-217a2.appspot.com\",\r\n    messagingSenderId: \"440756000946\",\r\n    appId: \"1:440756000946:web:f3abb34d419d0603cc51ab\",\r\n    measurementId: \"G-FJW0NN9MVK\"\r\n})\r\n\r\nconst unsubscribeFirebase = (docType) => {\r\n    return firebaseConfig.firestore().collection(docType);\r\n}\r\n\r\nexport default unsubscribeFirebase;","import React, {useState} from 'react';\r\nimport {FaTrashAlt} from 'react-icons/fa';\r\nimport unsubscribeFirebase from '../../firebase';\r\n\r\nfunction List({id, select}) {\r\n    const [modalConfirm, setModalConfirm] = useState(false); \r\n\r\n    const deleteList = async listId => {\r\n      try {\r\n        await unsubscribeFirebase('tasks')\r\n          .where('listId', '==', listId)\r\n          .get()\r\n          .then(snapShot => {\r\n            snapShot.forEach(doc => doc.ref.delete());\r\n          });\r\n\r\n        await unsubscribeFirebase('lists')\r\n          .doc(listId)\r\n          .delete();\r\n\r\n          select();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n      e.stopPropagation();\r\n      setModalConfirm(!modalConfirm);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <span\r\n          className={\r\n            modalConfirm\r\n              ? 'active sidebar__list-delete'\r\n              : 'sidebar__list-delete'\r\n          }\r\n          onClick={handleClick}\r\n        >\r\n          <FaTrashAlt />\r\n        </span>\r\n        {modalConfirm && (\r\n          <div className='delete-modal'>\r\n            <div className='delete-modal__content'>\r\n              <p>Are you sure you want to delete this list?</p>\r\n              <button onClick={() => deleteList(id)}>Delete</button>\r\n              <span onClick={handleClick}>Cancel</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default List\r\n","import React, {useState} from 'react';\r\nimport unsubscribeFirebase from '../../firebase';\r\nimport {FaPlus} from 'react-icons/fa';\r\n\r\nfunction AddList({changed, input}) {\r\n    const [showAdd, setShowAdd] = useState(false);\r\n\r\n    const addList = (listName) => { \r\n        if(input){\r\n          unsubscribeFirebase('lists')\r\n            .add({ listName })\r\n            .then(() => {\r\n              changed('', 'list')\r\n              setShowAdd(false);\r\n            })\r\n        } \r\n    }\r\n\r\n    return (\r\n      <div className='addList'>\r\n        {showAdd && (\r\n          <div className='addList__content'>\r\n            <input\r\n              value={input}\r\n              onChange={e => changed(e.target.value, 'list')}\r\n              className='addList__input'\r\n              type='text'\r\n              placeholder='Enter new list name'\r\n            />\r\n            <button className='addList__button' onClick={() => addList(input)}>\r\n              Add\r\n            </button>\r\n            <span className='addList__cancel' onClick={() => setShowAdd(false)}>\r\n              Cancel\r\n            </span>\r\n          </div>\r\n        )}\r\n        <span className='addList__icon'><FaPlus /></span>\r\n        <span\r\n          className='addList__text'\r\n          onClick={() => setShowAdd(!showAdd)}\r\n        >Add new List!</span>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AddList\r\n","import React, {useState} from 'react';\r\nimport {FaChevronCircleDown} from 'react-icons/fa';\r\nimport List from '../List/List';\r\nimport AddList from '../AddList/AddList';\r\n\r\nexport default function Sidebar({select, lists, active, changed, input}) {\r\n    const [show, setShow] = useState(true);\r\n    \r\n    return (\r\n      <div className='sidebar'>\r\n        <div className='sidebar__list-dropdown' onClick={() => {\r\n          select();\r\n          setShow(!show)\r\n        }}>\r\n          <span>\r\n            <FaChevronCircleDown className={!show && 'hide-lists'}/>\r\n          </span>\r\n          <h2>Lists</h2>\r\n        </div>\r\n        {\r\n          show && <ul className='sidebar__lists' onClick={select}>\r\n          {lists.map(list => (\r\n            <li\r\n              key={list.docId}\r\n              value={list.docId}\r\n              className={\r\n                active && active.toString() === list.docId\r\n                  ? 'active sidebar__list'\r\n                  : 'sidebar__list'\r\n              }\r\n            >\r\n              {list.listName}\r\n              <List id={list.docId} select={select} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        }\r\n        <AddList changed={changed} input={input} />\r\n      </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport unsubscribeFirebase from '../../firebase';\r\nimport { FaRegCheckCircle, FaRegCircle } from 'react-icons/fa';\r\n\r\nexport default function Checkbox({id, filter, select}) {\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const doneTask = () => {\r\n        unsubscribeFirebase('tasks').doc(id).update({ done: true });\r\n    }\r\n\r\n    const selectTask = () => {\r\n        select(id);\r\n        setChecked(!checked);\r\n    }\r\n\r\n    return (\r\n      <div className='checkbox-div'>\r\n        {filter === 'current' ? (\r\n          <span className='checkbox' onClick={doneTask}>\r\n            <FaRegCircle />\r\n          </span>\r\n        ) : (\r\n          <span className='checkbox' onClick={selectTask}>\r\n            {checked ? <FaRegCheckCircle /> : <FaRegCircle />}\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport unsubscribeFirebase from '../../firebase';\r\nimport {FaPlus} from 'react-icons/fa';\r\n\r\nfunction AddTask({list, changed, input}) {\r\n    const [showAdd, setShowAdd] = useState(false);\r\n\r\n    const addTask = (task) => {\r\n        if(list){\r\n            unsubscribeFirebase('tasks')\r\n              .add({\r\n                done: false,\r\n                listId: list,\r\n                task\r\n              })\r\n              .then(() => {\r\n                changed('', 'task');\r\n                setShowAdd(false);\r\n              });\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className='addTask'>\r\n        {showAdd && (\r\n          <div className='addTask__content'>\r\n            <input\r\n              value={input}\r\n              onChange={e => changed(e.target.value, 'task')}\r\n              className='addTask__input'\r\n              type='text'\r\n              placeholder='Enter new Task'\r\n            />\r\n            <button className='addTask__button' onClick={() => addTask(input)}>\r\n              Add\r\n            </button>\r\n            <span className='addTask__cancel' onClick={() => setShowAdd(false)}>\r\n              Cancel\r\n            </span>\r\n          </div>\r\n        )}\r\n        <span className='addTask__icon'><FaPlus /></span>\r\n        <span className='addTask__text' onClick={() => setShowAdd(!showAdd)}>\r\n          Add new Task!\r\n        </span>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AddTask\r\n","import React, {useState} from 'react';\r\nimport Checkbox from '../Checkbox/Checkbox';\r\nimport AddTask from '../AddTask/AddTask';\r\nimport unsubscribeFirebase from '../../firebase';\r\n\r\nexport default function Tasks({tasks, doneTasks, listName, list, changed, input}) {\r\n    const [filter, setFilter] = useState('current');\r\n    const [checkedTasks, setcheckedTasks] = useState([]);\r\n\r\n    const filterHandler = (e) => {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    const setClassesName = (className) => {\r\n      return filter === className \r\n        ? `active tasks__filter-${className}`\r\n        : `tasks__filter-${className}`\r\n    }\r\n\r\n    const selectTasks = (id) => {\r\n        if(!checkedTasks.includes(id)){\r\n            setcheckedTasks([...checkedTasks, id])\r\n        }else{\r\n            const filteredArray = checkedTasks.filter(idx => idx !== id)\r\n            setcheckedTasks([...filteredArray]);\r\n        }\r\n    }\r\n\r\n    const tasksHandler = (checkedTasks, func) => {\r\n        const deleteTasks = checkedTasks.map(func)\r\n\r\n        Promise.all(deleteTasks).then(() => {\r\n          setcheckedTasks([]);\r\n          setFilter('current');\r\n        });\r\n    };\r\n\r\n    return (\r\n      <div className='tasks'>\r\n        <h2 className='list-name'>{listName}</h2>\r\n        {list && (\r\n          <div>\r\n            <button\r\n              className={setClassesName('current')}\r\n              value='current'\r\n              onClick={filterHandler}\r\n            >\r\n              Current\r\n            </button>\r\n            <button\r\n              className={setClassesName('done')}\r\n              value='done'\r\n              onClick={filterHandler}\r\n            >\r\n              Done\r\n            </button>\r\n          </div>\r\n        )}\r\n        <ul className='tasks__list'>\r\n          {filter === 'current'\r\n            ? tasks.map(task => (\r\n                <li key={task.docId}>\r\n                  <Checkbox id={task.docId} filter={filter} />\r\n                  <span>{task.task}</span>\r\n                </li>\r\n              ))\r\n            : doneTasks.map(task => (\r\n                <li key={task.docId}>\r\n                  <Checkbox\r\n                    id={task.docId}\r\n                    filter={filter}\r\n                    select={selectTasks}\r\n                  />\r\n                  <span className='tasks__list-done'>{task.task}</span>\r\n                </li>\r\n              ))}\r\n        </ul>\r\n        {list && filter === 'current' ? (\r\n          <AddTask list={list} changed={changed} input={input} />\r\n        ) : filter === 'done' && doneTasks.length !== 0 ? (\r\n          <div>\r\n            <button\r\n              className='tasks__filter-restore'\r\n              onClick={() =>\r\n                tasksHandler(checkedTasks, task =>\r\n                  unsubscribeFirebase('tasks')\r\n                    .doc(task)\r\n                    .update({ done: false })\r\n                )\r\n              }\r\n            >\r\n              Restore\r\n            </button>\r\n            <button\r\n              className='tasks__filter-delete'\r\n              onClick={() =>\r\n                tasksHandler(checkedTasks, task =>\r\n                  unsubscribeFirebase('tasks')\r\n                    .doc(task)\r\n                    .delete()\r\n                )\r\n              }\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport unsubscribeFirebase from '../../firebase';\r\nimport Tasks from '../../components/Tasks/Tasks';\r\n\r\nclass Page extends Component {\r\n    state = {\r\n        lists: [],\r\n        tasks: [],\r\n        doneTasks: [],\r\n        selectedList: '',\r\n        selectedListName: '',\r\n        listInput: '',\r\n        taskInput: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getLists();\r\n    }\r\n\r\n    getLists = () => {\r\n        unsubscribeFirebase('lists')\r\n            .onSnapshot(snapShot => {\r\n                const newLists = snapShot.docs.map(list => ({\r\n                    docId: list.id,\r\n                    ...list.data()\r\n                }));\r\n\r\n                this.setState({lists: newLists})\r\n            })\r\n    }\r\n\r\n    getTasks = (listId) => {\r\n        unsubscribeFirebase('tasks')\r\n            .where('listId', '==', listId)\r\n            .onSnapshot(snapShot => {\r\n                const newTasks = snapShot.docs.map(task => ({\r\n                    docId: task.id,\r\n                    ...task.data()\r\n            }));\r\n\r\n            const tasks = newTasks.filter(task => task.done !== true);\r\n            const doneTasks = newTasks.filter(task => task.done === true);\r\n\r\n            this.setState({ tasks, doneTasks });\r\n          }\r\n        );\r\n    }\r\n\r\n    selectList = e => {\r\n        e ? this.setState({ \r\n            selectedList: e.target.getAttribute('value'),\r\n            selectedListName: e.target.textContent\r\n        }, () => {\r\n            this.getTasks(this.state.selectedList)\r\n        }) : this.setState({\r\n            selectedList: '',\r\n            selectedListName: ''\r\n        })\r\n    }\r\n\r\n    input = (value, type) => {\r\n        if(type === 'list')\r\n            this.setState({ listInput: value })\r\n        if(type === 'task') \r\n            this.setState({ taskInput: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className='page'>\r\n            <Sidebar\r\n              select={this.selectList}\r\n              lists={this.state.lists}\r\n              active={this.state.selectedList}\r\n              changed={this.input}\r\n              input={this.state.listInput}\r\n            />\r\n            <Tasks\r\n              tasks={this.state.tasks}\r\n              doneTasks={this.state.doneTasks}\r\n              list={this.state.selectedList}\r\n              listName={this.state.selectedListName}\r\n              changed={this.input}\r\n              input={this.state.taskInput}\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;","import React from 'react';\nimport './App.scss';\nimport Page from './containers/Page/Page';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}